version: '3'
services:
  db:
    restart: always
    env_file: prod.env
    volumes:
      - database:/var/lib/postgresql/data # persist data between containers
  proxy:
    restart: always
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
  docker-gen:
    restart: always
    image: jwilder/docker-gen
    command: -notify-sighup nginx-proxy -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen"
    environment:
      DEFAULT_HOST: valuessorter.humetricshss.org
  letsencrypt:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - certs:/etc/nginx/certs:rw
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
  web:
    build:
      dockerfile: prod.Dockerfile
    env_file: prod.env
    restart: always
#    ports:
#      - "3000:3000"
    environment:
      RACK_ENV: production
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: enabled
      RAILS_SERVE_STATIC_FILES: enabled
      VIRTUAL_PORT: 3000
      VIRTUAL_HOST: valuessorter.humetricshss.org
      LETSENCRYPT_HOST: valuessorter.humetricshss.org
      LETSENCRYPT_EMAIL: mesh@msu.edu

volumes:
  certs:
  conf:
  acme:
  vhost:
  database:
  html:
